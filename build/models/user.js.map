{"version":3,"sources":["../../src/models/user.js"],"names":["UserSchema","Schema","email","type","String","lowercase","trim","index","unique","required","username","password","bcrypt","name","bio","default","url","twitter","background","Number","interests","Types","Mixed","preferences","notifications","daily","Boolean","weekly","follows","recoveryCode","active","admin","collection","pre","next","isNew","then","catch","logger","error","err","_update","_conditions","passcode","plugin","timestamps","mongooseStringQuery","module","exports","mongoose","model"],"mappings":"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","file":"user.js","sourcesContent":["import mongoose, { Schema } from 'mongoose';\nimport bcrypt from 'mongoose-bcrypt';\nimport timestamps from 'mongoose-timestamp';\nimport mongooseStringQuery from 'mongoose-string-query';\n\nimport logger from '../utils/logger';\nimport email from '../utils/email';\n\nexport const UserSchema = new Schema(\n\t{\n\t\temail: {\n\t\t\ttype: String,\n\t\t\tlowercase: true,\n\t\t\ttrim: true,\n\t\t\tindex: true,\n\t\t\tunique: true,\n\t\t\trequired: true\n\t\t},\n\t\tusername: {\n\t\t\ttype: String,\n\t\t\tlowercase: true,\n\t\t\ttrim: true,\n\t\t\tindex: true,\n\t\t\tunique: true,\n\t\t\trequired: true\n\t\t},\n\t\tpassword: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t\tbcrypt: true\n\t\t},\n\t\tname: {\n\t\t\ttype: String,\n\t\t\ttrim: true,\n\t\t\trequired: true\n\t\t},\n\t\tbio: {\n\t\t\ttype: String,\n\t\t\ttrim: true,\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: String,\n\t\t\ttrim: true,\n\t\t\tdefault: ''\n\t\t},\n\t\ttwitter: {\n\t\t\ttype: String,\n\t\t\ttrim: true,\n\t\t\tdefault: ''\n\t\t},\n\t\tbackground: {\n\t\t\ttype: Number,\n\t\t\tdefault: 1\n\t\t},\n\t\tinterests: {\n\t\t\ttype: Schema.Types.Mixed,\n\t\t\tdefault: []\n\t\t},\n\t\tpreferences: {\n\t\t\tnotifications: {\n\t\t\t\tdaily: {\n\t\t\t\t\ttype: Boolean,\n\t\t\t\t\tdefault: false\n\t\t\t\t},\n\t\t\t\tweekly: {\n\t\t\t\t\ttype: Boolean,\n\t\t\t\t\tdefault: true\n\t\t\t\t},\n\t\t\t\tfollows: {\n\t\t\t\t\ttype: Boolean,\n\t\t\t\t\tdefault: true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\trecoveryCode: {\n\t\t\ttype: String,\n\t\t\ttrim: true,\n\t\t\tdefault: ''\n\t\t},\n\t\tactive: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tadmin: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\t{ collection: 'users' }\n);\n\nUserSchema.pre('save', function(next) {\n\tif (!this.isNew) {\n\t\tnext();\n\t}\n\n\temail({\n\t\ttype: 'welcome',\n\t\temail: this.email\n\t})\n\t\t.then(() => {\n\t\t\tnext();\n\t\t})\n\t\t.catch(err => {\n\t\t\tlogger.error(err);\n\t\t\tnext();\n\t\t});\n});\n\nUserSchema.pre('findOneAndUpdate', function(next) {\n\tif (!this._update.recoveryCode) {\n\t\treturn next();\n\t}\n\n\temail({\n\t\ttype: 'password',\n\t\temail: this._conditions.email,\n\t\tpasscode: this._update.recoveryCode\n\t})\n\t\t.then(() => {\n\t\t\tnext();\n\t\t})\n\t\t.catch(err => {\n\t\t\tlogger.error(err);\n\t\t\tnext();\n\t\t});\n});\n\nUserSchema.plugin(bcrypt);\nUserSchema.plugin(timestamps);\nUserSchema.plugin(mongooseStringQuery);\n\nUserSchema.index({ email: 1, username: 1 });\n\nmodule.exports = exports = mongoose.model('User', UserSchema);\n"]}