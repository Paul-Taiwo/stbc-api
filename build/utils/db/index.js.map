{"version":3,"sources":["../../../src/utils/db/index.js"],"names":["Promise","global","connection","connect","database","uri","then","info","env","db","catch","err","message","code","error"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAEA,mBAASA,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA,IAAME,aAAa,mBAASC,OAAT,CAAiB,iBAAOC,QAAP,CAAgBC,GAAjC,CAAnB;;AAEAH,WACEI,IADF,CACO,cAAM;AACX,kBAAOC,IAAP,gCAC8B,iBAAOH,QAAP,CAAgBC,GAD9C,4BAEE,iBAAOG,GAFT;AAKA,QAAOC,EAAP;AACA,CARF,EASEC,KATF,CASQ,eAAO;AACb,KAAIC,IAAIC,OAAJ,CAAYC,IAAZ,KAAqB,WAAzB,EAAsC;AACrC,mBAAON,IAAP,CAAY,iDAAZ;AACA,qBAASJ,OAAT,CAAiB,iBAAOC,QAAP,CAAgBC,GAAjC;AACA,EAHD,MAGO;AACN,mBAAOS,KAAP,CAAa,gDAAb;AACA,mBAAOA,KAAP,CAAaH,GAAb;AACA;AACD,CAjBF;;kBAmBeT,U","file":"index.js","sourcesContent":["import mongoose from 'mongoose';\n\nimport config from '../../config';\nimport logger from '../logger';\n\nmongoose.Promise = global.Promise;\n\nconst connection = mongoose.connect(config.database.uri);\n\nconnection\n\t.then(db => {\n\t\tlogger.info(\n\t\t\t`Successfully connected to ${config.database.uri} MongoDB cluster in ${\n\t\t\t\tconfig.env\n\t\t\t} mode.`,\n\t\t);\n\t\treturn db;\n\t})\n\t.catch(err => {\n\t\tif (err.message.code === 'ETIMEDOUT') {\n\t\t\tlogger.info('Attempting to re-establish database connection.');\n\t\t\tmongoose.connect(config.database.uri);\n\t\t} else {\n\t\t\tlogger.error('Error while attempting to connect to database:');\n\t\t\tlogger.error(err);\n\t\t}\n\t});\n\nexport default connection;\n"]}