{"version":3,"sources":["../src/server.js"],"names":["api","use","bodyParser","urlencoded","extended","json","err","req","res","next","name","status","send","expressWinston","logger","transports","winston","Console","format","combine","colorize","meta","MainRoute","EventRoute","SermonRoute","BlogRoute","message","listen","config","server","port","error","process","exit","require","info","env","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA;AACA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIC,GAAJ,CAAQ,4BAAR;AACAD,IAAIC,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAL,IAAIC,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/B,MAAIH,IAAII,IAAJ,KAAa,mBAAjB,EAAsC;AACpCF,QAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qCAArB;AACD;AACF,CAJD;;AAMAZ,IAAIC,GAAJ,CACEY,yBAAeC,MAAf,CAAsB;AACpBC,cAAY,CACV,IAAIC,kBAAQD,UAAR,CAAmBE,OAAvB,EADU,CADQ;AASpBC,UAAQF,kBAAQE,MAAR,CAAeC,OAAf,CACNH,kBAAQE,MAAR,CAAeE,QAAf,EADM,EAENJ,kBAAQE,MAAR,CAAeb,IAAf,EAFM,CATY;AAapBgB,QAAM;AAbc,CAAtB,CADF;;AAkBArB,IAAIC,GAAJ,CAAQ,SAAR,EAAmB,CAACqB,iBAAD,EAAYC,kBAAZ,EAAwBC,mBAAxB,EAAqCC,iBAArC,CAAnB;;AAEAzB,IAAIC,GAAJ,CAAQ,IAAR,EAAc,UAACM,GAAD,EAAMC,GAAN;AAAA,SACZA,IAAIG,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AACnBqB,aAAS;AADU,GAArB,CADY;AAAA,CAAd;;AAMA1B,IAAI2B,MAAJ,CAAWC,iBAAOC,MAAP,CAAcC,IAAzB,EAA+B,UAACxB,GAAD,EAAS;AACtC,MAAIA,GAAJ,EAAS;AACPQ,qBAAOiB,KAAP,CAAazB,GAAb;AACA0B,YAAQC,IAAR,CAAa,CAAb;AACD;;AAEDC,UAAQ,YAAR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEApB,mBAAOqB,IAAP,iCACgCP,iBAAOC,MAAP,CAAcC,IAD9C,YACyDF,iBAAOQ,GADhE;AAGD,CAnBD;;AAqBAC,OAAOC,OAAP,GAAiBtC,GAAjB","file":"server.js","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport express from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport winston from \"winston\";\nimport compression from \"compression\";\nimport expressWinston from \"express-winston\";\nimport { config as envConfig } from \"dotenv\";\nimport { MainRoute, EventRoute, SermonRoute, BlogRoute } from \"./routes\";\nimport winstonPapertrail from \"winston-papertrail\";\nimport jwt from \"express-jwt\";\n\nimport config from \"./config\";\nimport logger from \"./utils/logger\";\n\nenvConfig();\nconst api = express();\n\napi.use(cors());\napi.use(compression());\napi.use(bodyParser.urlencoded({ extended: true }));\napi.use(bodyParser.json());\n\n// api.use(\n//   jwt({ secret: config.jwt.secret }).unless({\n//     path: [\n//       \"/\",\n//       \"/events\",\n//       \"/api\",\n//       \"/auth/signup\",\n//       \"/auth/login\",\n//       \"/auth/forgot-password\",\n//       \"/auth/reset-password\",\n//     ],\n//   })\n// );\n\napi.use((err, req, res, next) => {\n  if (err.name === \"UnauthorizedError\") {\n    res.status(401).send(\"Missing authentication credentials.\");\n  }\n});\n\napi.use(\n  expressWinston.logger({\n    transports: [\n      new winston.transports.Console(),\n      // new winston.transports.Papertrail({\n      // \thost: config.logger.host,\n      // \tport: config.logger.port,\n      // \tlevel: 'error'\n      // })\n    ],\n    format: winston.format.combine(\n      winston.format.colorize(),\n      winston.format.json()\n    ),\n    meta: true,\n  })\n);\n\napi.use(\"/api/v1\", [MainRoute, EventRoute, SermonRoute, BlogRoute]);\n\napi.use(\"**\", (req, res) =>\n  res.status(404).json({\n    message: \"Not Found\",\n  })\n);\n\napi.listen(config.server.port, (err) => {\n  if (err) {\n    logger.error(err);\n    process.exit(1);\n  }\n\n  require(\"./utils/db\");\n\n  // fs.readdirSync(path.join(__dirname, \"routes\")).map((file) => {\n  //   if (file === 'index.js') {\n  //     const fi = fs.readFileSync(path.join(__dirname, \"routes/\") + file).toString(\"utf8\").;\n  //     console.log(\"FI =========>\", fi)\n  //   }\n  //   // api.use('/api/v1', require(\"./routes/\" + file)(api));\n  // });\n\n  logger.info(\n    `API is now running on port ${config.server.port} in ${config.env} mode`\n  );\n});\n\nmodule.exports = api;\n"]}