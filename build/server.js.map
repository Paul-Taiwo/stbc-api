{"version":3,"sources":["../src/server.js"],"names":["api","use","urlencoded","extended","json","secret","jwt","unless","path","err","req","res","next","name","status","send","logger","transports","Papertrail","host","port","level","meta","listen","server","error","process","exit","require","readdirSync","join","__dirname","map","file","info","env","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIC,GAAJ,CAAQ,4BAAR;AACAD,IAAIC,GAAJ,CAAQ,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAH,IAAIC,GAAJ,CAAQ,qBAAWG,IAAX,EAAR;;AAEAJ,IAAIC,GAAJ,CACC,0BAAI,EAAEI,QAAQ,iBAAOC,GAAP,CAAWD,MAArB,EAAJ,EAAmCE,MAAnC,CAA0C;AACzCC,OAAM,CACL,GADK,EAEL,cAFK,EAGL,aAHK,EAIL,uBAJK,EAKL,sBALK;AADmC,CAA1C,CADD;;AAYAR,IAAIC,GAAJ,CAAQ,UAACQ,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAChC,KAAIH,IAAII,IAAJ,KAAa,mBAAjB,EAAsC;AACrCF,MAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qCAArB;AACA;AACD,CAJD;;AAMAf,IAAIC,GAAJ,CACC,yBAAee,MAAf,CAAsB;AACrBC,aAAY,CACX,IAAI,kBAAQA,UAAR,CAAmBC,UAAvB,CAAkC;AACjCC,QAAM,iBAAOH,MAAP,CAAcG,IADa;AAEjCC,QAAM,iBAAOJ,MAAP,CAAcI,IAFa;AAGjCC,SAAO;AAH0B,EAAlC,CADW,CADS;AAQrBC,OAAM;AARe,CAAtB,CADD;;AAaAtB,IAAIuB,MAAJ,CAAW,iBAAOC,MAAP,CAAcJ,IAAzB,EAA+B,eAAO;AACrC,KAAIX,GAAJ,EAAS;AACR,mBAAOgB,KAAP,CAAahB,GAAb;AACAiB,UAAQC,IAAR,CAAa,CAAb;AACA;;AAEDC,SAAQ,YAAR;;AAEA,cAAGC,WAAH,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,EAA+CC,GAA/C,CAAmD,gBAAQ;AAC1DJ,UAAQ,cAAcK,IAAtB,EAA4BjC,GAA5B;AACA,EAFD;;AAIA,kBAAOkC,IAAP,iCAC+B,iBAAOV,MAAP,CAAcJ,IAD7C,YACwD,iBAAOe,GAD/D;AAGA,CAfD;;AAiBAC,OAAOC,OAAP,GAAiBrC,GAAjB","file":"server.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport winston from 'winston';\nimport compression from 'compression';\nimport expressWinston from 'express-winston';\nimport winstonPapertrail from 'winston-papertrail';\nimport jwt from 'express-jwt';\n\nimport config from './config';\nimport logger from './utils/logger';\n\nconst api = express();\n\napi.use(cors());\napi.use(compression());\napi.use(bodyParser.urlencoded({ extended: true }));\napi.use(bodyParser.json());\n\napi.use(\n\tjwt({ secret: config.jwt.secret }).unless({\n\t\tpath: [\n\t\t\t'/',\n\t\t\t'/auth/signup',\n\t\t\t'/auth/login',\n\t\t\t'/auth/forgot-password',\n\t\t\t'/auth/reset-password'\n\t\t]\n\t})\n);\n\napi.use((err, req, res, next) => {\n\tif (err.name === 'UnauthorizedError') {\n\t\tres.status(401).send('Missing authentication credentials.');\n\t}\n});\n\napi.use(\n\texpressWinston.logger({\n\t\ttransports: [\n\t\t\tnew winston.transports.Papertrail({\n\t\t\t\thost: config.logger.host,\n\t\t\t\tport: config.logger.port,\n\t\t\t\tlevel: 'error'\n\t\t\t})\n\t\t],\n\t\tmeta: true\n\t})\n);\n\napi.listen(config.server.port, err => {\n\tif (err) {\n\t\tlogger.error(err);\n\t\tprocess.exit(1);\n\t}\n\n\trequire('./utils/db');\n\n\tfs.readdirSync(path.join(__dirname, 'routes')).map(file => {\n\t\trequire('./routes/' + file)(api);\n\t});\n\n\tlogger.info(\n\t\t`API is now running on port ${config.server.port} in ${config.env} mode`\n\t);\n});\n\nmodule.exports = api;\n"]}